/*!
 * fastshell
 * Fiercely quick and opinionated front-ends
 * https://HosseinKarami.github.io/fastshell
 * @author Hossein Karami
 * @version 1.0.5
 * Copyright 2017. MIT licensed.
 */
!function(e,s,i,c){"use strict";e(function(){function i(){var i=jQuery(s).height(),c=jQuery(s).width();e(".hero-wrapper").css("height",i),e(".hero").css("height",.75*c),e(".hero").css("width",.75*c);var h=Number(e(".hero-wrapper").css("height").replace("px","")),r=Number(e(".hero").css("height").replace("px",""));e(".hero-container").css("padding-top",(h-r)/2)}function c(){e(".home").css("height",e(s).height()),e(".wrapper").css("width",e(".nav-wrapper.container").css("width")),e(".home-caption").css("width",e(".nav-wrapper ul").css("width")),e(".home-icons").css("width",e(".nav-wrapper ul").css("width"))}e(s).on("load",function(){}),e(s).on("resize",function(){i(),c()}),e("nav a").on("click",function(){e("nav a").removeClass("active"),e(this).addClass("active")}),i(),c()})}(jQuery,window,document);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjcmlwdHMuanMiXSwibmFtZXMiOlsiJCIsIndpbmRvdyIsImRvY3VtZW50IiwidW5kZWZpbmVkIiwic2V0SGVyb1NpemUiLCJicm93c2VySGVpZ2h0IiwialF1ZXJ5IiwiaGVpZ2h0IiwiYnJvd3NlcldpZHRoIiwid2lkdGgiLCJjc3MiLCJ3cmFwcGVySGVpZ2h0IiwiTnVtYmVyIiwicmVwbGFjZSIsImhlcm9IZWlnaHQiLCJzZXRFbGVtZW50c1dpZHRoIiwib24iLCJyZW1vdmVDbGFzcyIsInRoaXMiLCJhZGRDbGFzcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Q0FBQSxTQUFBQSxFQUFBQyxFQUFBQyxFQUFBQyxHQUVBLFlBRUFILEdBQUEsV0FFQSxRQUFBSSxLQUNBLEdBQUFDLEdBQUFDLE9BQUFMLEdBQUFNLFNBQ0FDLEVBQUFGLE9BQUFMLEdBQUFRLE9BRUFULEdBQUEsaUJBQUFVLElBQUEsU0FBQSxHQUNBVixFQUFBLFNBQUFVLElBQUEsU0FBQSxJQUFBRixHQUNBUixFQUFBLFNBQUFVLElBQUEsUUFBQSxJQUFBRixFQUVBLElBQUFHLEdBQUFDLE9BQUFaLEVBQUEsaUJBQUFVLElBQUEsVUFBQUcsUUFBQSxLQUFBLEtBQ0FDLEVBQUFGLE9BQUFaLEVBQUEsU0FBQVUsSUFBQSxVQUFBRyxRQUFBLEtBQUEsSUFFQWIsR0FBQSxtQkFBQVUsSUFBQSxlQUFBQyxFQUFBRyxHQUFBLEdBR0EsUUFBQUMsS0FDQWYsRUFBQSxTQUFBVSxJQUFBLFNBQUFWLEVBQUFDLEdBQUFNLFVBQ0FQLEVBQUEsWUFBQVUsSUFBQSxRQUFBVixFQUFBLDBCQUFBVSxJQUFBLFVBQ0FWLEVBQUEsaUJBQUFVLElBQUEsUUFBQVYsRUFBQSxtQkFBQVUsSUFBQSxVQUNBVixFQUFBLGVBQUFVLElBQUEsUUFBQVYsRUFBQSxtQkFBQVUsSUFBQSxVQUdBVixFQUFBQyxHQUFBZSxHQUFBLE9BQUEsY0FHQWhCLEVBQUFDLEdBQUFlLEdBQUEsU0FBQSxXQUNBWixJQUNBVyxNQUVBZixFQUFBLFNBQUFnQixHQUFBLFFBQUEsV0FDQWhCLEVBQUEsU0FBQWlCLFlBQUEsVUFDQWpCLEVBQUFrQixNQUFBQyxTQUFBLFlBR0FmLElBQ0FXLE9BR0FULE9BQUFMLE9BQUFDIiwiZmlsZSI6InNjcmlwdHMubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uICgkLCB3aW5kb3csIGRvY3VtZW50LCB1bmRlZmluZWQpIHtcclxuXHJcbiAgICAndXNlIHN0cmljdCc7XHJcblxyXG4gICAgJChmdW5jdGlvbiAoKSB7XHJcblxyXG4gICAgICAgIGZ1bmN0aW9uIHNldEhlcm9TaXplKCkge1xyXG4gICAgICAgICAgICB2YXIgYnJvd3NlckhlaWdodCA9IGpRdWVyeSh3aW5kb3cpLmhlaWdodCgpO1xyXG4gICAgICAgICAgICB2YXIgYnJvd3NlcldpZHRoID0galF1ZXJ5KHdpbmRvdykud2lkdGgoKTtcclxuXHJcbiAgICAgICAgICAgICQoJy5oZXJvLXdyYXBwZXInKS5jc3MoJ2hlaWdodCcsIChicm93c2VySGVpZ2h0KSk7XHJcbiAgICAgICAgICAgICQoJy5oZXJvJykuY3NzKCdoZWlnaHQnLCAoMC43NSAqIGJyb3dzZXJXaWR0aCkpO1xyXG4gICAgICAgICAgICAkKCcuaGVybycpLmNzcygnd2lkdGgnLCAoMC43NSAqIGJyb3dzZXJXaWR0aCkpO1xyXG5cclxuICAgICAgICAgICAgdmFyIHdyYXBwZXJIZWlnaHQgPSBOdW1iZXIoJCgnLmhlcm8td3JhcHBlcicpLmNzcygnaGVpZ2h0JykucmVwbGFjZSgncHgnLCAnJykpO1xyXG4gICAgICAgICAgICB2YXIgaGVyb0hlaWdodCA9IE51bWJlcigkKCcuaGVybycpLmNzcygnaGVpZ2h0JykucmVwbGFjZSgncHgnLCAnJykpO1xyXG5cclxuICAgICAgICAgICAgJCgnLmhlcm8tY29udGFpbmVyJykuY3NzKCdwYWRkaW5nLXRvcCcsICh3cmFwcGVySGVpZ2h0IC0gaGVyb0hlaWdodCkvMik7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBmdW5jdGlvbiBzZXRFbGVtZW50c1dpZHRoKCkge1xyXG4gICAgICAgICAgICAkKCcuaG9tZScpLmNzcygnaGVpZ2h0JywgJCh3aW5kb3cpLmhlaWdodCgpKTtcclxuICAgICAgICAgICAgJCgnLndyYXBwZXInKS5jc3MoJ3dpZHRoJywgJCgnLm5hdi13cmFwcGVyLmNvbnRhaW5lcicpLmNzcygnd2lkdGgnKSk7XHJcbiAgICAgICAgICAgICQoJy5ob21lLWNhcHRpb24nKS5jc3MoJ3dpZHRoJywgJCgnLm5hdi13cmFwcGVyIHVsJykuY3NzKCd3aWR0aCcpKTtcclxuICAgICAgICAgICAgJCgnLmhvbWUtaWNvbnMnKS5jc3MoJ3dpZHRoJywgJCgnLm5hdi13cmFwcGVyIHVsJykuY3NzKCd3aWR0aCcpKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICQod2luZG93KS5vbignbG9hZCcsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgJCh3aW5kb3cpLm9uKCdyZXNpemUnLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgXHRzZXRIZXJvU2l6ZSgpO1xyXG4gICAgICAgICAgICBzZXRFbGVtZW50c1dpZHRoKCk7fSk7XHJcblxyXG4gICAgICAgICQoJ25hdiBhJykub24oJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAkKCduYXYgYScpLnJlbW92ZUNsYXNzKCdhY3RpdmUnKTtcclxuICAgICAgICAgICAgJCh0aGlzKS5hZGRDbGFzcygnYWN0aXZlJyk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIHNldEhlcm9TaXplKCk7XHJcbiAgICAgICAgc2V0RWxlbWVudHNXaWR0aCgpO1xyXG4gIH0pO1xyXG5cclxufSkoalF1ZXJ5LCB3aW5kb3csIGRvY3VtZW50KTtcclxuXHJcblxyXG4vLyBSZXZlYWwgb24gc2Nyb29sXHJcbi8vXHJcbi8vICQod2luZG93KS5zY3JvbGwoZnVuY3Rpb24oKSB7XHJcbi8vICAgICB2YXIgJGZhbHNlSGVhZGVyID0gJCgnLmhlcm8td3JhcHBlcicpLFxyXG4vLyAgICAgICAgICRoZXJvTWFzayA9ICQoJyNoZXJvLW1hc2snKTtcclxuLy8gICAgIHZhciAkc2hhZG93ZXIgPSAkKCcuaGVyby13cmFwcGVyJyk7XHJcbi8vICAgICB2YXIgd1Njcm9sbCA9ICQodGhpcykuc2Nyb2xsVG9wKCk7XHJcbi8vICAgICB2YXIgaGVhZFNjcm9sbCA9ICgtd1Njcm9sbCAvIDQgKTtcclxuLy8gICAgIHZhciBmYWRlclNjcm9sbCA9ICh3U2Nyb2xsIC8gOTAwKTtcclxuLy8gICAgIHZhciBmYWRlVG9Db2xvciA9IE1hdGgubWluKGZhZGVyU2Nyb2xsLCAxKTtcclxuLy8gICAgICRoZXJvTWFzay5jc3MoJ2ZpbHRlcicsICdpbnZlcnQoJyArIGZhZGVUb0NvbG9yICsgJyknKTtcclxuLy8gICAgICRzaGFkb3dlci5jc3MoJ2JhY2tncm91bmQtY29sb3InLCAncmdiYSgwLDAsMCwnICsgZmFkZVRvQ29sb3IgKyAnKScpO1xyXG5cclxuLy8gfSk7Il19
