/*!
 * fastshell
 * Fiercely quick and opinionated front-ends
 * https://HosseinKarami.github.io/fastshell
 * @author Hossein Karami
 * @version 1.0.5
 * Copyright 2017. MIT licensed.
 */
.clear:after,.clear:before{content:" ";display:table}.clear{*zoom:1}.clear:after{clear:both}*{box-sizing:border-box;font-smoothing:antialiased;text-rendering:optimizeLegibility}html{font-size:24px}body{font:300 13px/1.6 Raleway,Helvetica Neue,Helvetica,Arial;color:#ddd;transition:all .4s ease-in .3s}body,html{min-height:100vh}

/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block}audio:not([controls]){display:none;height:0}progress{vertical-align:baseline}[hidden],template{display:none}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit;font-weight:bolder}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}svg:not(:root){overflow:hidden}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}button,input,select,textarea{font:inherit;margin:0}optgroup{font-weight:700}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-input-placeholder{color:inherit;opacity:.54}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}.hero{animation-name:a;animation-duration:80s;animation-iteration-count:infinite;animation-timing-function:linear;background-image:url(/assets/img/hero.jpg);background-size:contain;background-size:100%;background-position:50% 50%;background-repeat:no-repeat;max-width:750px;max-height:750px;border-radius:50%}@media (max-width:650px){.hero{max-height:250px;max-width:250px}}.hero.mask{z-index:1;background-image:url(/assets/img/hero-mask.png);animation-name:b;background-size:100%}.hero-wrapper{margin-bottom:0!important;width:100%}.hero-container{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-pack:center;justify-content:center;-ms-flex-align:center;align-items:center}.home{position:relative}.home,.home .home-bg{background-color:#000}.home .home-bg{width:100%;height:100%;position:absolute;top:-1.8rem;overflow:hidden}.home .home-bg .bg-mask{z-index:3;top:0;left:0}.home .home-bg img{position:absolute;filter:drop-shadow(0 0 50px black)}@media only screen and (max-width:480px){.home .home-bg img{top:150px}}.home .home-bg .bg{transform:translate(-50px)}.home-caption{margin-left:auto;padding:2rem 1rem!important;background-color:hsla(0,0%,100%,.1);text-align:center;z-index:4}@media only screen and (max-width:480px){.home-caption{position:relative;top:250px;width:100%!important;margin:0 auto!important}}.home-caption h1{margin:0;border-top:1px solid #ddd;color:#ddd;font-size:1.6rem;text-transform:uppercase;font-weight:400}.home-caption h2{color:#fff;font-size:2rem;border-top:1px solid #ddd;margin-bottom:0}.home-caption span{font-size:.9rem;border-bottom:1px solid #ddd}.home-caption .caption-border{margin:0 auto;display:block;width:80%;border-bottom:1px solid #ddd}.home-caption p{font-size:1rem;border-bottom:1px solid #ddd;border-top:0;margin-bottom:0;padding:2rem 0!important}.home-logo{max-width:250px;position:absolute;bottom:3.8rem;right:2rem;filter:invert(1)}@media only screen and (max-width:480px){.home-logo{top:10px;left:0;right:0;margin-left:auto;margin-right:auto}}.home-icons{text-align:center;margin-left:auto;padding-top:2rem}@media only screen and (max-width:480px){.home-icons{display:inline;margin:0;position:relative;right:30px;bottom:30px}}.home-icons .social-icon{width:35px;height:auto;padding:.5rem;margin-right:1rem;box-sizing:content-box;border:1px solid transparent;filter:invert(1);transition:all .3s ease-in;cursor:pointer}.home-icons .social-icon:hover{border:1px solid #000}.home-section{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-align:center;align-items:center;cursor:pointer}@media only screen and (max-width:480px){.home-section{margin-top:150px}}.home-section:hover p{border-bottom:1px solid #000}.home-section .icon{width:75px;height:75px;-webkit-clip-path:polygon(50% 3%,95% 25%,95% 75%,50% 97%,5% 75%,5% 25%);clip-path:polygon(50% 3%,95% 25%,95% 75%,50% 97%,5% 75%,5% 25%)}.home-section p{color:#000;font-size:1rem;margin-left:1rem}.logo{margin:-58px 0 0 -100px;position:absolute;top:50%;left:50%}nav{height:3rem;font-family:Raleway;font-weight:200;background-color:#000;text-transform:uppercase}nav ul{list-style:none}nav ul li{display:block}nav ul li a{font-size:.8rem}nav ul li a:hover{background-color:hsla(0,0%,100%,.1)}nav ul li .active{background-color:hsla(0,0%,100%,.1)!important}html{overflow-x:hidden}.vh-height{height:100vh}.full-height{height:100%}.display-flex{display:-ms-flexbox;display:flex}.nav-wrapper{z-index:3}.display-flex-row{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row}.flex-center{-ms-flex-line-pack:center}.flex-center,.flex-wrapper{-ms-flex-align:center;align-items:center;align-content:center}.flex-wrapper{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-pack:end;justify-content:flex-end;-ms-flex-line-pack:center;max-width:1100px;margin:0 auto}.content-wrapper{position:relative;margin:0 auto;max-width:1900px;height:100%}.wrapper{position:relative;z-index:2}.padding{padding:1rem!important}.padding-bottom{padding-bottom:1rem!important}.double-padding{padding:2rem!important}.no-padding{padding:0!important}.no-padding-top{padding-top:0!important}.no-padding-bottom{padding-bottom:0!important}.margin-bottom{margin-bottom:1rem}.no-margin{margin:0!important}.margin-auto{margin:0 auto}@keyframes a{0%{transform:rotate(-75deg)}50%{transform:rotate(75deg)}to{transform:rotate(-75deg)}}@keyframes b{0%{transform:rotate(0deg)}to{transform:rotate(-359deg)}}h1,h2,h3,h4,h5,h6,p,span{margin:0;padding:0}::selection{background:#333;color:#fff;text-shadow:none}::-moz-selection{background:#333;color:#fff;text-shadow:none}::-webkit-selection{background:#333;color:#fff;text-shadow:none}@media only screen and (min-width:320px){html{font-size:14px}}@media only screen and (min-width:1024px){html{font-size:18px}}@media print{*{background:transparent!important;color:#000!important;box-shadow:none!important;text-shadow:none!important}a,a:visited{text-decoration:underline}a[href]:after{content:" (" attr(href) ")"}abbr[title]:after{content:" (" attr(title) ")"}.ir a:after,a[href^="#"]:after,a[href^="javascript:"]:after{content:""}blockquote,pre{border:1px solid #999;page-break-inside:avoid}thead{display:table-header-group}img,tr{page-break-inside:avoid}img{max-width:100%!important}@page{margin:.5cm}h2,h3,p{orphans:3;widows:3}h2,h3{page-break-after:avoid}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
